#!/usr/bin/env cwl-runner

class: Workflow
description: "GGR_ChIP-seq pipeline - reads: {{read_type|upper}}, region: {{ peak_type }}, samples: {{ sample_types|join(' and ') }}."
requirements:
  - class: ScatterFeatureRequirement
  - class: SubworkflowFeatureRequirement

inputs:
{%  if "control" in sample_types %}
    {% for sample_type in sample_types %}
        {% if read_type == "pe" %}
  - id: "#input_{{ sample_type }}_fastq_read1_files"
    type:
      type: array
      items: File
    description: "Input {{ sample_type }} fastq paired-end read 1 files"
  - id: "#input_{{ sample_type }}_fastq_read2_files"
    type:
      type: array
      items: File
    description: "Input {{ sample_type }} fastq paired-end read 2 files"
        {% else %}
  - id: "#input_{{ sample_type }}_fastq_files"
    type:
      type: array
      items: File
        {% endif %}
    {%- endfor %}
{% elif read_type == "pe" %}
  - id: "#input_fastq_read1_files"
    type:
      type: array
      items: File
    description: "Input fastq paired-end read 1 files"
  - id: "#input_fastq_read2_files"
    type:
      type: array
      items: File
    description: "Input fastq paired-end read 2 files"
{% else %}
  - id: "#input_fastq_files"
    type:
      type: array
      items: File
{% endif %}
  - id: "#default_adapters_file"
    type: File
    description: "Adapters file"
  - id: "#genome_ref_first_index_file"
    type: File
    description: |
        "First index file of Bowtie reference genome with extension 1.ebwt. \
        (Note: the rest of the index files MUST be in the same folder)"
  - id: "#genome_sizes_file"
    type: File
    description: "Genome sizes tab-delimited file (used in samtools)"
  - id: "#ENCODE_blacklist_bedfile"
    type: File
    description: "Bedfile containing ENCODE consensus blacklist regions to be excluded."
  - id: "#nthreads_qc"
    type: int
    description: "Numbers of threads required for the 01-qc step"
  - id: "#nthreads_trimm"
    type: int
    description: "Numbers of threads required for the 02-trim step"
  - id: "#nthreads_map"
    type: int
    description: "Numbers of threads required for the 03-map step"

outputs:
{%  if "control" in sample_types %}
    {% for sample_type in sample_types %}
        {% if read_type == "pe" %}
  - id: "#qc_{{ sample_type }}_count_raw_reads_read1"
    source: "#qc_{{ sample_type }}.output_count_raw_reads_read1"
    description: "Raw read counts of fastq files for read 1 after QC for {{ sample_type }}"
    type:
      type: array
      items: File
  - id: "#qc_{{ sample_type }}_count_raw_reads_read2"
    source: "#qc_{{ sample_type }}.output_count_raw_reads_read2"
    description: "Raw read counts of fastq files for read 2 after QC for {{ sample_type }}"
    type:
      type: array
      items: File
  - id: "#qc_{{ sample_type }}_diff_counts_read1"
    source: "#qc_{{ sample_type }}.output_diff_counts_read1"
    description: "Diff file between number of raw reads and number of reads counted by FASTQC, read 1 for {{ sample_type }}"
    type:
      type: array
      items: File
  - id: "#qc_{{ sample_type }}_diff_counts_read2"
    source: "#qc_{{ sample_type }}.output_diff_counts_read2"
    description: "Diff file between number of raw reads and number of reads counted by FASTQC, read 2 for {{ sample_type }}"
    type:
      type: array
      items: File
  - id: "#trimm_{{ sample_type }}_raw_counts_read1"
    source: "#trimm_{{ sample_type }}.output_trimmed_read1_fastq_read_count"
    description: "Raw read counts for R1 of fastq files after TRIMM for {{ sample_type }}"
    type:
      type: array
      items: File
  - id: "#trimm_{{ sample_type }}_raw_counts_read2"
    source: "#trimm_{{ sample_type }}.output_trimmed_read2_fastq_read_count"
    description: "Raw read counts for R2 of fastq files after TRIMM for {{ sample_type }}"
    type:
      type: array
      items: File
  - id: "#trimm_{{ sample_type }}_fastq_files_read1"
    source: "#trimm_{{ sample_type }}.output_data_fastq_read1_trimmed_files"
    description: "FASTQ files after trimming step for {{ sample_type }}"
    type:
      type: array
      items: File
  - id: "#trimm_{{ sample_type }}_fastq_files_read2"
    source: "#trimm_{{ sample_type }}.output_data_fastq_read2_trimmed_files"
    description: "FASTQ files after trimming step for {{ sample_type }}"
    type:
      type: array
      items: File
        {% else %}
  - id: "#qc_{{ sample_type }}_raw_read_counts"
    source: "#qc_{{ sample_type }}.output_raw_read_counts"
    description: "Raw read counts of fastq files after QC for {{ sample_type }}"
    type:
      type: array
      items: File
  - id: "#trimm_{{ sample_type }}_raw_read_counts"
    source: "#trimm_{{ sample_type }}.trimmed_fastq_read_count"
    description: "Raw read counts of fastq files after TRIMM for {{ sample_type }}"
    type:
      type: array
      items: File
  - id: "#trimm_{{ sample_type }}_fastq_files"
    source: "#trimm_{{ sample_type }}.output_data_fastq_trimmed_files"
    description: "FASTQ files after trimming step for {{ sample_type }}"
    type:
      type: array
      items: File
        {% endif %}
  - id: "#map_{{ sample_type }}_mark_duplicates_files"
    source: "#map_{{ sample_type }}.output_picard_mark_duplicates_files"
    description: "Summary of duplicates removed with Picard tool MarkDuplicates (for multiple reads aligned to the same positions) for {{ sample_type }}"
    type:
      type: array
      items: File
  - id: "#map_{{ sample_type }}_dedup_bam_files"
    source: "#map_{{ sample_type }}.output_data_sorted_dedup_bam_files"
    description: "Filtered BAM files (post-processing end point) for {{ sample_type }}"
    type:
      type: array
      items: File
  - id: "#map_{{ sample_type }}_dedup_bam_index_files"
    source: "#map_{{ sample_type }}.output_index_dedup_bam_files"
    description: "Filtered BAM index files for {{ sample_type }}"
    type:
      type: array
      items: File
  - id: "#map_{{ sample_type }}_pbc_files"
    source: "#map_{{ sample_type }}.output_pbc_files"
    description: "PCR Bottleneck Coefficient files (used to flag samples when pbc<0.5) for {{ sample_type }}"
    type:
      type: array
      items: File
{#  - id: "#quant_{{ sample_type }}_coverage_bigwig_files"#}
{#    source: "#quant_{{ sample_type }}.coverage_bigwig_files"#}
{#    description: "Sequence coverage in BigWig format for {{ sample_type }}"#}
{#    type:#}
{#      type: array#}
{#      items: File#}
{#  - id: "#quant_{{ sample_type }}_coverage_normalized_bigwig_files"#}
{#    source: "#quant_{{ sample_type }}.coverage_normalized_bigwig_files"#}
{#    description: "Sequence coverage in BigWig format for {{ sample_type }}"#}
{#    type:#}
{#      type: array#}
{#      items: File#}
    {%  endfor %}
{% else %}
{% if read_type == "pe" %}
   - id: "#qc_count_raw_reads_read1"
    source: "#qc.output_count_raw_reads_read1"
    description: "Raw read counts of fastq files for read 1 after QC"
    type:
      type: array
      items: File
 - id: "#qc_count_raw_reads_read2"
    source: "#qc.output_count_raw_reads_read2"
    description: "Raw read counts of fastq files for read 2 after QC"
    type:
      type: array
      items: File
  - id: "#qc_diff_counts_read1"
    source: "#qc.output_diff_counts_read1"
    description: "Diff file between number of raw reads and number of reads counted by FASTQC, read 1"
    type:
      type: array
      items: File
  - id: "#qc_diff_counts_read2"
    source: "#qc.output_diff_counts_read2"
    description: "Diff file between number of raw reads and number of reads counted by FASTQC, read 2"
    type:
      type: array
      items: File
  - id: "#trimm_raw_counts_read1"
    source: "#trimm.output_trimmed_read1_fastq_read_count"
    description: "Raw read counts for R1 of fastq files after TRIMM"
    type:
      type: array
      items: File
  - id: "#trimm_raw_counts_read2"
    source: "#trimm.output_trimmed_read2_fastq_read_count"
    description: "Raw read counts for R2 of fastq files after TRIMM"
    type:
      type: array
      items: File
  - id: "#trimm_fastq_files_read1"
    source: "#trimm.output_data_fastq_read1_trimmed_files"
    description: "FASTQ files after trimming step"
    type:
      type: array
      items: File
  - id: "#trimm_fastq_files_read2"
    source: "#trimm.output_data_fastq_read2_trimmed_files"
    description: "FASTQ files after trimming step"
    type:
      type: array
      items: File
{% else %}
  - id: "#qc_raw_read_counts"
    source: "#qc.output_raw_read_counts"
    description: "Raw read counts of fastq files after QC"
    type:
      type: array
      items: File
  - id: "#trimm_raw_read_counts"
    source: "#trimm.trimmed_fastq_read_count"
    description: "Raw read counts of fastq files after TRIMM"
    type:
      type: array
      items: File
  - id: "#trimm_fastq_files"
    source: "#trimm.output_data_fastq_trimmed_files"
    description: "FASTQ files after trimming step"
    type:
      type: array
      items: File
{% endif %}
  - id: "#map_mark_duplicates_files"
    source: "#map.output_picard_mark_duplicates_files"
    description: "Summary of duplicates removed with Picard tool MarkDuplicates (for multiple reads aligned to the same positions"
    type:
      type: array
      items: File
  - id: "#map_dedup_bam_files"
    source: "#map.output_data_sorted_dedup_bam_files"
    description: "Filtered BAM files (post-processing end point)"
    type:
      type: array
      items: File
  - id: "#map_dedup_bam_index_files"
    source: "#map.output_index_dedup_bam_files"
    description: "Filtered BAM index files"
    type:
      type: array
      items: File
  - id: "#map_pbc_files"
    source: "#map.output_pbc_files"
    description: "PCR Bottleneck Coefficient files (used to flag samples when pbc<0.5)"
    type:
      type: array
      items: File
  - id: "#quant_coverage_bigwig_files"
    source: "#quant.coverage_bigwig_files"
    description: "Sequence coverage in BigWig format"
    type:
      type: array
      items: File
  - id: "#quant_coverage_normalized_bigwig_files"
    source: "#quant.coverage_normalized_bigwig_files"
    description: "Sequence coverage in BigWig format"
    type:
      type: array
      items: File
{% endif %}
steps:
{%  if "control" in sample_types %}
    {% for sample_type in sample_types %}
        {% if read_type == "pe" %}
  - id: "#qc_{{ sample_type }}"
    run: {import: "processing_step1/01-qc-pe.cwl"}
    inputs:
      - { id: "#qc_{{ sample_type }}.input_read1_fastq_files", source: "#input_{{ sample_type }}_fastq_read1_files" }
      - { id: "#qc_{{ sample_type }}.input_read2_fastq_files", source: "#input_{{ sample_type }}_fastq_read2_files" }
      - { id: "#qc_{{ sample_type }}.default_adapters_file", source: "#default_adapters_file" }
      - { id: "#qc_{{ sample_type }}.nthreads", source: "#nthreads_qc" }
    outputs:
      - { id:  "#qc_{{ sample_type }}.output_count_raw_reads_read1" }
      - { id:  "#qc_{{ sample_type }}.output_count_raw_reads_read2" }
      - { id:  "#qc_{{ sample_type }}.output_diff_counts_read1" }
      - { id:  "#qc_{{ sample_type }}.output_diff_counts_read2" }
      - { id:  "#qc_{{ sample_type }}.output_fastqc_report_files_read1" }
      - { id:  "#qc_{{ sample_type }}.output_fastqc_report_files_read2" }
      - { id:  "#qc_{{ sample_type }}.output_fastqc_data_files_read1" }
      - { id:  "#qc_{{ sample_type }}.output_fastqc_data_files_read2" }
      - { id:  "#qc_{{ sample_type }}.output_custom_adapters_read1" }
      - { id:  "#qc_{{ sample_type }}.output_custom_adapters_read2" }
  - id: "#trimm_{{ sample_type }}"
    run: {import: "processing_step1/02-trim-pe.cwl"}
    inputs:
      - {id: "#trimm_{{ sample_type }}.input_read1_fastq_files", source: "#input_{{ sample_type }}_fastq_read1_files"}
      - {id: "#trimm_{{ sample_type }}.input_read2_fastq_files", source: "#input_{{ sample_type }}_fastq_read2_files"}
      - {id: "#trimm_{{ sample_type }}.input_read1_adapters_files", source: "#qc_{{ sample_type }}.output_custom_adapters_read1"}
      - {id: "#trimm_{{ sample_type }}.input_read2_adapters_files", source: "#qc_{{ sample_type }}.output_custom_adapters_read2"}
      - {id: "#trimm_{{ sample_type }}.nthreads", source: "#nthreads_trimm"}
    outputs:
      - { id:  "#trimm_{{ sample_type }}.output_data_fastq_read1_trimmed_files" }
      - { id:  "#trimm_{{ sample_type }}.output_data_fastq_read2_trimmed_files" }
      - { id:  "#trimm_{{ sample_type }}.output_trimmed_read1_fastq_read_count" }
      - { id:  "#trimm_{{ sample_type }}.output_trimmed_read2_fastq_read_count" }
  - id: "#map_{{ sample_type }}"
    run: {import: "processing_step1/03-map-pe.cwl"}
    inputs:
      - {id: "#map_{{ sample_type }}.input_fastq_read1_files", source: "#trimm_{{ sample_type }}.output_data_fastq_read1_trimmed_files"}
      - {id: "#map_{{ sample_type }}.input_fastq_read2_files", source: "#trimm_{{ sample_type }}.output_data_fastq_read2_trimmed_files"}
      - {id: "#map_{{ sample_type }}.genome_ref_first_index_file", source: "#genome_ref_first_index_file"}
      - {id: "#map_{{ sample_type }}.genome_sizes_file", source: "#genome_sizes_file"}
      - {id: "#map_{{ sample_type }}.ENCODE_blacklist_bedfile", source: "#ENCODE_blacklist_bedfile"}
      - {id: "#map_{{ sample_type }}.nthreads", source: "#nthreads_map"}
    outputs:
      - { id:  "#map_{{ sample_type }}.output_data_sorted_dedup_bam_files" }
      - { id:  "#map_{{ sample_type }}.output_index_dedup_bam_files" }
      - { id:  "#map_{{ sample_type }}.output_picard_mark_duplicates_files" }
      - { id:  "#map_{{ sample_type }}.output_pbc_files" }
        {% else %}
  - id: "#qc_{{ sample_type }}"
    run: {import: "processing_step1/01-qc-se.cwl"}
    inputs:
      - {id: "#qc_{{ sample_type }}.input_fastq_files", source: "#input_{{ sample_type }}_fastq_files"}
      - {id: "#qc_{{ sample_type }}.default_adapters_file", source: "#default_adapters_file"}
      - {id: "#qc_{{ sample_type }}.nthreads", source: "#nthreads_qc"}
    outputs:
      - { id:  "#qc_{{ sample_type }}.output_raw_read_counts" }
      - { id:  "#qc_{{ sample_type }}.output_fastqc_read_counts" }
      - { id:  "#qc_{{ sample_type }}.output_fastqc_report_files" }
      - { id:  "#qc_{{ sample_type }}.output_fastqc_data_files" }
      - { id:  "#qc_{{ sample_type }}.output_custom_adapters" }
  - id: "#trimm_{{ sample_type }}"
    run: {import: "processing_step1/02-trim-se.cwl"}
    inputs:
      - {id: "#trimm_{{ sample_type }}.input_fastq_files", source: "#input_{{ sample_type }}_fastq_files"}
      - {id: "#trimm_{{ sample_type }}.input_adapters_files", source: "#qc_{{ sample_type }}.output_custom_adapters"}
      - {id: "#trimm_{{ sample_type }}.nthreads", source: "#nthreads_trimm"}
    outputs:
      - { id:  "#trimm_{{ sample_type }}.output_data_fastq_trimmed_files" }
      - { id:  "#trimm_{{ sample_type }}.trimmed_fastq_read_count" }
  - id: "#map_{{ sample_type }}"
    run: {import: "processing_step1/03-map-se.cwl"}
    inputs:
      - {id: "#map_{{ sample_type }}.input_fastq_files", source: "#trimm_{{ sample_type }}.output_data_fastq_trimmed_files"}
      - {id: "#map_{{ sample_type }}.genome_ref_first_index_file", source: "#genome_ref_first_index_file"}
      - {id: "#map_{{ sample_type }}.genome_sizes_file", source: "#genome_sizes_file"}
      - {id: "#map_{{ sample_type }}.ENCODE_blacklist_bedfile", source: "#ENCODE_blacklist_bedfile"}
      - {id: "#map_{{ sample_type }}.nthreads", source: "#nthreads_map"}
    outputs:
      - { id:  "#map_{{ sample_type }}.output_data_sorted_dedup_bam_files" }
      - { id:  "#map_{{ sample_type }}.output_index_dedup_bam_files" }
      - { id:  "#map_{{ sample_type }}.output_picard_mark_duplicates_files" }
      - { id:  "#map_{{ sample_type }}.output_pbc_files" }
        {% endif %}
    {% endfor %}
{%  elif read_type == "pe" %}
  - id: "#qc"
    run: {import: "processing_step1/01-qc-pe.cwl"}
    inputs:
      - { id: "#qc.input_read1_fastq_files", source: "#input_fastq_read1_files" }
      - { id: "#qc.input_read2_fastq_files", source: "#input_fastq_read2_files" }
      - { id: "#qc.default_adapters_file", source: "#default_adapters_file" }
      - { id: "#qc.nthreads", source: "#nthreads_qc" }
    outputs:
      - { id:  "#qc.output_count_raw_reads_read1" }
      - { id:  "#qc.output_count_raw_reads_read2" }
      - { id:  "#qc.output_diff_counts_read1" }
      - { id:  "#qc.output_diff_counts_read2" }
      - { id:  "#qc.output_fastqc_report_files_read1" }
      - { id:  "#qc.output_fastqc_report_files_read2" }
      - { id:  "#qc.output_fastqc_data_files_read1" }
      - { id:  "#qc.output_fastqc_data_files_read2" }
      - { id:  "#qc.output_custom_adapters_read1" }
      - { id:  "#qc.output_custom_adapters_read2" }
  - id: "#trimm"
    run: {import: "processing_step1/02-trim-pe.cwl"}
    inputs:
      - {id: "#trimm.input_read1_fastq_files", source: "#input_fastq_read1_files"}
      - {id: "#trimm.input_read2_fastq_files", source: "#input_fastq_read2_files"}
      - {id: "#trimm.input_read1_adapters_files", source: "#qc.output_custom_adapters_read1"}
      - {id: "#trimm.input_read2_adapters_files", source: "#qc.output_custom_adapters_read2"}
      - {id: "#trimm.nthreads", source: "#nthreads_trimm"}
    outputs:
      - { id:  "#trimm.output_data_fastq_read1_trimmed_files" }
      - { id:  "#trimm.output_data_fastq_read2_trimmed_files" }
      - { id:  "#trimm.output_trimmed_read1_fastq_read_count" }
      - { id:  "#trimm.output_trimmed_read2_fastq_read_count" }
  - id: "#map"
    run: {import: "processing_step1/03-map-pe.cwl"}
    inputs:
      - {id: "#map.input_fastq_read1_files", source: "#trimm.output_data_fastq_read1_trimmed_files"}
      - {id: "#map.input_fastq_read2_files", source: "#trimm.output_data_fastq_read2_trimmed_files"}
      - {id: "#map.genome_ref_first_index_file", source: "#genome_ref_first_index_file"}
      - {id: "#map.genome_sizes_file", source: "#genome_sizes_file"}
      - {id: "#map.ENCODE_blacklist_bedfile", source: "#ENCODE_blacklist_bedfile"}
      - {id: "#map.nthreads", source: "#nthreads_map"}
    outputs:
      - { id:  "#map.output_data_sorted_dedup_bam_files" }
      - { id:  "#map.output_index_dedup_bam_files" }
      - { id:  "#map.output_picard_mark_duplicates_files" }
      - { id:  "#map.output_pbc_files" }
{% else %}
  - id: "#qc"
    run: {import: "processing_step1/01-qc-se.cwl"}
    inputs:
      - {id: "#qc.input_fastq_files", source: "#input_fastq_files"}
      - {id: "#qc.default_adapters_file", source: "#default_adapters_file"}
      - {id: "#qc.nthreads", source: "#nthreads_qc"}
    outputs:
      - { id:  "#qc.output_raw_read_counts" }
      - { id:  "#qc.output_fastqc_read_counts" }
      - { id:  "#qc.output_fastqc_report_files" }
      - { id:  "#qc.output_fastqc_data_files" }
      - { id:  "#qc.output_custom_adapters" }
  - id: "#trimm"
    run: {import: "processing_step1/02-trim-se.cwl"}
    inputs:
      - {id: "#trimm.input_fastq_files", source: "#input_fastq_files"}
      - {id: "#trimm.input_adapters_files", source: "#qc.output_custom_adapters"}
      - {id: "#trimm.nthreads", source: "#nthreads_trimm"}
    outputs:
      - { id:  "#trimm.output_data_fastq_trimmed_files" }
      - { id:  "#trimm.trimmed_fastq_read_count" }
  - id: "#map"
    run: {import: "processing_step1/03-map-se.cwl"}
    inputs:
      - {id: "#map.input_fastq_files", source: "#trimm.output_data_fastq_trimmed_files"}
      - {id: "#map.genome_ref_first_index_file", source: "#genome_ref_first_index_file"}
      - {id: "#map.genome_sizes_file", source: "#genome_sizes_file"}
      - {id: "#map.ENCODE_blacklist_bedfile", source: "#ENCODE_blacklist_bedfile"}
      - {id: "#map.nthreads", source: "#nthreads_map"}
    outputs:
      - { id:  "#map.output_data_sorted_dedup_bam_files" }
      - { id:  "#map.output_index_dedup_bam_files" }
      - { id:  "#map.output_picard_mark_duplicates_files" }
      - { id:  "#map.output_pbc_files" }
{% endif %}